#! /bin/sh
#
# Prevent running more than onece
#
OWN_LOCK=/bin/false 
#LOCK_FILE=/var/lock/subsys/mod_rgpio.run 
LOCK_FILE=/data/rgpio/mod_rgpio.run
 
clean_up() { 
  $OWN_LOCK && rm -f $LOCK_FILE 
} 
 
trap clean_up EXIT SIGINT SIGKILL 
     
if [ -e $LOCK_FILE ]; then 
	sleep 0.1
	if [ -e $LOCK_FILE ]; then
# second chance....
        	sleep 0.1
        	if [ -e $LOCK_FILE ]; then
#third chance....        
    			echo "Lock file exists, exiting." >&2 
    			exit 1 
		fi
	fi
else 
    if ! touch $LOCK_FILE; then 
      echo "Failed to create lock file, exiting." >&2 
      exit 1 
    fi 
    OWN_LOCK=/bin/true 
fi 
 
function Read_Relay() {
/data/rgpio/modpoll/arm-linux-gnueabihf/modpoll -m rtu -b 115200 -p none -d 8 -1 -r 2 -s 1 -c 1 $1
}

function Read_Input() {
/data/rgpio/modpoll/arm-linux-gnueabihf/modpoll -m rtu -b 115200 -p none -d 8 -1 -r 11 -s 1 -c 1 $1
}

function Write_Relay() {                                                                                                
/data/rgpio/modpoll/arm-linux-gnueabihf/modpoll -m rtu -b 115200 -p none -d 8 -1 -r 3 -s 1 -c 1 $1 $2
} 

#
# Check if read or Write command
#

if [ "$#" -eq 2 ]; then
	msg=$(echo -n $($1 $2) | awk '{print $NF}')
	number=$(($msg))
	if ((number >= 0 && number <= 255)); then
        	echo -n $msg
        	exit 0
	else          
        	exit 1
	fi
else
	msg=$(echo -n $($2 $3 $1) | awk '{print $NF}')                                                                                         
	if [ "$msg" == "reference." ]; then
		exit 0
	else
		exit 1
	fi
fi
